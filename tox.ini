[tox]
envlist = py27-{unit,registry,legacy-registry,mysql,psql}
skipsdist = True

[pytest]
norecursedirs = node_modules
testpaths = ./
python_files = **/test/test*.py
confcutdir = test

[testenv]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
setenv =
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONPATH={toxinidir}{:}{toxinidir}
    TEST=true
    legacy-registry: FILE=test/registry_tests.py
    registry: FILE=test/registry/registry_tests.py
    unit: FILE=""
commands =
    alembic upgrade head
    py.test --timeout=3600 --cov-report=html --cov-report=term-missing -x --color no --verbose {env:FILE} -vv {posargs}

[testenv:py27-mysql]
setenv = 
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONPATH={toxinidir}{:}{toxinidir}
    TEST=true
    SKIP_DB_SCHEMA=true
    PYTEST_ADDOPTS=--ignore=endpoints/appr/test/
    FILE=""
docker = mysql:5.7
dockerenv =
    MYSQL_DATABASE=quay_ci
    MYSQL_PASSWORD=quay
    MYSQL_RANDOM_ROOT_PASSWORD=true
    MYSQL_USER=quay
whitelist_externals = sleep
commands =
    sleep 20
    python -c 'import os; import sys; os.environ["TEST_DATABASE_URI"] = os.path.expandvars("mysql+pymysql://quay:quay@127.0.0.1:$MYSQL_3306_TCP_PORT/quay_ci"); os.execvp(sys.argv[1], sys.argv[1:])' alembic upgrade head
    python -c 'import os; import sys; os.environ["TEST_DATABASE_URI"] = os.path.expandvars("mysql+pymysql://quay:quay@127.0.0.1:$MYSQL_3306_TCP_PORT/quay_ci"); os.execvp(sys.argv[1], sys.argv[1:])' py.test --timeout=3600 --cov-report=html --cov-report=term-missing -x --color no --verbose {env:FILE} -vv {posargs}

[testenv:py27-psql]
setenv = 
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONPATH={toxinidir}{:}{toxinidir}
    TEST=true
    SKIP_DB_SCHEMA=true
    PYTEST_ADDOPTS=--ignore=endpoints/appr/test/
    FILE=""
docker = postgres:9.6
dockerenv =
    POSTGRES_DB=quay_ci
    POSTGRES_PASSWORD=quay
    POSTGRES_USER=quay
whitelist_externals =
    sleep
    bash
commands =
    sleep 20
    bash -c 'docker exec $(docker ps -q -n 1) psql -U quay -d quay_ci -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"'
    python -c 'import os; import sys; os.environ["TEST_DATABASE_URI"] = os.path.expandvars("postgresql://quay:quay@127.0.0.1:$POSTGRES_5432_TCP_PORT/quay_ci"); os.execvp(sys.argv[1], sys.argv[1:])' alembic upgrade head
    python -c 'import os; import sys; os.environ["TEST_DATABASE_URI"] = os.path.expandvars("postgresql://quay:quay@127.0.0.1:$POSTGRES_5432_TCP_PORT/quay_ci"); os.execvp(sys.argv[1], sys.argv[1:])' py.test --timeout=3600 --cov-report=html --cov-report=term-missing -x --color no --verbose {env:FILE} -vv {posargs}
